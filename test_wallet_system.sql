-- =====================================================
-- üß™ SCRIPT DE TEST DU SYST√àME DE PORTEFEUILLE
-- =====================================================

-- Test 1: V√©rifier que les tables existent
SELECT 'Test 1: V√©rification des tables' as test_name;

SELECT 
    table_name,
    CASE 
        WHEN table_name = 'wallets' THEN '‚úÖ Table wallets existe'
        WHEN table_name = 'wallet_transactions' THEN '‚úÖ Table wallet_transactions existe'
        ELSE '‚ùå Table manquante'
    END as status
FROM information_schema.tables 
WHERE table_name IN ('wallets', 'wallet_transactions')
AND table_schema = 'public';

-- Test 2: V√©rifier la structure de la table wallets
SELECT 'Test 2: Structure de la table wallets' as test_name;

SELECT 
    column_name,
    data_type,
    is_nullable,
    column_default,
    CASE 
        WHEN column_name = 'currency' AND column_default = '''USD''::character varying' THEN '‚úÖ Devise par d√©faut USD'
        WHEN column_name = 'currency' THEN '‚ö†Ô∏è Devise par d√©faut incorrecte'
        ELSE '‚úÖ OK'
    END as status
FROM information_schema.columns 
WHERE table_name = 'wallets'
ORDER BY ordinal_position;

-- Test 3: V√©rifier les contraintes sur la devise
SELECT 'Test 3: Contraintes sur la devise' as test_name;

SELECT 
    constraint_name,
    constraint_type,
    CASE 
        WHEN constraint_type = 'CHECK' THEN '‚úÖ Contrainte CHECK pr√©sente'
        ELSE '‚ö†Ô∏è Contrainte manquante'
    END as status
FROM information_schema.table_constraints 
WHERE table_name = 'wallets' 
AND constraint_type = 'CHECK';

-- Test 4: V√©rifier les politiques RLS
SELECT 'Test 4: Politiques RLS' as test_name;

SELECT 
    policyname,
    permissive,
    cmd,
    CASE 
        WHEN cmd = 'SELECT' THEN '‚úÖ Politique SELECT'
        WHEN cmd = 'INSERT' THEN '‚úÖ Politique INSERT'
        WHEN cmd = 'UPDATE' THEN '‚úÖ Politique UPDATE'
        ELSE '‚ö†Ô∏è Politique inconnue'
    END as status
FROM pg_policies 
WHERE tablename = 'wallets'
ORDER BY policyname;

-- Test 5: V√©rifier les triggers
SELECT 'Test 5: Triggers' as test_name;

SELECT 
    trigger_name,
    event_manipulation,
    action_timing,
    CASE 
        WHEN trigger_name = 'create_wallet_for_user_trigger' THEN '‚úÖ Trigger de cr√©ation automatique'
        WHEN trigger_name = 'update_wallets_updated_at' THEN '‚úÖ Trigger de mise √† jour'
        ELSE '‚ö†Ô∏è Trigger inconnu'
    END as status
FROM information_schema.triggers 
WHERE event_object_table = 'wallets'
ORDER BY trigger_name;

-- Test 6: V√©rifier les index
SELECT 'Test 6: Index' as test_name;

SELECT 
    indexname,
    indexdef,
    CASE 
        WHEN indexname LIKE '%user_id%' THEN '‚úÖ Index sur user_id'
        WHEN indexname LIKE '%wallet_id%' THEN '‚úÖ Index sur wallet_id'
        WHEN indexname LIKE '%created_at%' THEN '‚úÖ Index sur created_at'
        ELSE '‚ö†Ô∏è Index inconnu'
    END as status
FROM pg_indexes 
WHERE tablename IN ('wallets', 'wallet_transactions')
ORDER BY indexname;

-- Test 7: V√©rifier la colonne seller_id dans products
SELECT 'Test 7: Colonne seller_id dans products' as test_name;

SELECT 
    column_name,
    data_type,
    is_nullable,
    CASE 
        WHEN column_name = 'seller_id' THEN '‚úÖ Colonne seller_id pr√©sente'
        ELSE '‚ùå Colonne seller_id manquante'
    END as status
FROM information_schema.columns 
WHERE table_name = 'products' 
AND column_name = 'seller_id';

-- Test 8: V√©rifier les r√¥les utilisateur
SELECT 'Test 8: R√¥les utilisateur' as test_name;

SELECT 
    column_name,
    data_type,
    column_default,
    CASE 
        WHEN column_name = 'role' AND column_default LIKE '%user%' THEN '‚úÖ R√¥le par d√©faut user'
        WHEN column_name = 'role' THEN '‚ö†Ô∏è R√¥le par d√©faut incorrect'
        ELSE '‚ùå Colonne role manquante'
    END as status
FROM information_schema.columns 
WHERE table_name = 'users' 
AND column_name = 'role';

-- Test 9: V√©rifier les contraintes sur les r√¥les (user, driver, admin)
SELECT 'Test 9: Contraintes sur les r√¥les' as test_name;

SELECT 
    constraint_name,
    constraint_type,
    CASE 
        WHEN constraint_type = 'CHECK' AND constraint_name LIKE '%role%' THEN '‚úÖ Contrainte CHECK sur role (user, driver, admin)'
        ELSE '‚ö†Ô∏è Contrainte CHECK manquante'
    END as status
FROM information_schema.table_constraints 
WHERE table_name = 'users' 
AND constraint_type = 'CHECK'
AND constraint_name LIKE '%role%';

-- Test 10: R√©sum√© des tests
SELECT 'Test 10: R√©sum√©' as test_name;

SELECT 
    'Syst√®me de portefeuille' as component,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'wallets') 
        AND EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'wallet_transactions')
        THEN '‚úÖ Configur√© correctement'
        ELSE '‚ùå Tables manquantes'
    END as status;

SELECT 
    'Devises support√©es' as component,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_name = 'wallets' 
            AND column_name = 'currency' 
            AND column_default = '''USD''::character varying'
        ) THEN '‚úÖ USD et CDF support√©s'
        ELSE '‚ùå Devises non configur√©es'
    END as status;

SELECT 
    'R√¥les utilisateur' as component,
    CASE 
        WHEN EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_name = 'users' 
            AND column_name = 'role'
        ) THEN '‚úÖ R√¥les configur√©s'
        ELSE '‚ùå R√¥les non configur√©s'
    END as status;

-- Message de fin
SELECT 'üéâ Tests termin√©s ! V√©rifiez les r√©sultats ci-dessus.' as message;
